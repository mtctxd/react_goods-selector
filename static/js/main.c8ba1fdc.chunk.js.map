{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selected","headingText","length","text","join","replace","addItem","item","setState","includes","concat","removeItem","itemIndex","indexOf","splice","itemToggle","clearSelection","makeGoodsList","map","className","type","onClick","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOmBC,E,4MACnBC,MAAQ,CACNC,SAAU,CAAC,Q,EAGbC,YAAc,WACZ,IAAQD,EAAa,EAAKD,MAAlBC,SACAE,EAAWF,EAAXE,OACJC,EAAO,GAEX,QAAQ,GACN,KAAgB,IAAXD,EACHC,EAAI,mBAAeH,EAAS,IAC5B,MAEF,KAAgB,IAAXE,EACHC,EAAI,UAAMH,EAAS,GAAf,gBAAyBA,EAAS,GAAlC,iBACJ,MAEF,KAAKE,EAAS,EACZC,EAAI,oBACFH,EAASI,KAAK,MAAMC,QAAQ,cAAe,QADzC,2BAGJ,MAEF,QACEF,EAAO,oBAIX,OAAOA,G,EAGTG,QAAU,SAACC,GACT,EAAKC,UAAS,SAACT,GACb,IAAQC,EAAaD,EAAbC,SAER,OAAKA,EAASS,SAASF,GAMhBR,EALE,CACLC,SAAUA,EAASU,OAAOH,Q,EAQlCI,WAAa,SAACJ,GACZ,EAAKC,UAAS,SAACT,GACb,IAAQC,EAAaD,EAAbC,SAER,GAAIA,EAASS,SAASF,GAAO,CAC3B,IAAMK,EAAYb,EAAMC,SAASa,QAAQN,GAEzCP,EAASc,OAAOF,EAAW,GAG7B,OAAOb,M,EAIXgB,WAAa,SAACR,GACS,EAAKR,MAAlBC,SAEKS,SAASF,GACpB,EAAKI,WAAWJ,GAEhB,EAAKD,QAAQC,I,EAIjBS,eAAiB,WACf,EAAKR,UAAS,SAACT,GAKb,OAJqBA,EAAbC,SAECE,OAAS,EAEXH,M,EAIXkB,cAAgB,WACd,IAAQjB,EAAa,EAAKD,MAAlBC,SAER,OACEH,EAAgBqB,KAAI,SAACX,GACnB,OACE,qBAEEY,UAAS,wCACDnB,EAASS,SAASF,IAAS,uBAD1B,kBAFX,UAMGA,EACD,qBAAKY,UAAU,gBAAf,SACE,wBACEC,KAAK,SACLD,UAAU,eACVE,QAAS,WACP,EAAKN,WAAWR,IAJpB,SAOGP,EAASS,SAASF,GACf,SACA,YAhBHA,O,4CAyBf,WAAU,IAAD,OACP,OACE,sBAAKY,UAAU,MAAf,UACE,6BAAKG,KAAKrB,gBACV,wBACEmB,KAAK,SACLC,QAAS,kBAAM,EAAKL,kBAFtB,wBAMA,oBAAIG,UAAU,OAAd,SACGG,KAAKL,kBATV,yBAWqBpB,EAAgBK,e,GA9HVqB,IAAMC,WCjBvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8ba1fdc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selected: string[];\n};\n\nexport default class App extends React.Component<{}, State> {\n  state = {\n    selected: ['Jam'],\n  };\n\n  headingText = () => {\n    const { selected } = this.state;\n    const { length } = selected;\n    let text = '';\n\n    switch (true) {\n      case length === 1:\n        text = `selected ${selected[0]}`;\n        break;\n\n      case length === 2:\n        text = `${selected[0]} and ${selected[1]} are selected`;\n        break;\n\n      case length > 2:\n        text = `\n        ${selected.join(', ').replace(/,(?=[^,]*$)/, ' and')} are selected\n        `;\n        break;\n\n      default:\n        text = 'No goods selected';\n        break;\n    }\n\n    return text;\n  };\n\n  addItem = (item: string) => {\n    this.setState((state) => {\n      const { selected } = state;\n\n      if (!selected.includes(item)) {\n        return {\n          selected: selected.concat(item),\n        };\n      }\n\n      return state;\n    });\n  };\n\n  removeItem = (item: string) => {\n    this.setState((state) => {\n      const { selected } = state;\n\n      if (selected.includes(item)) {\n        const itemIndex = state.selected.indexOf(item);\n\n        selected.splice(itemIndex, 1);\n      }\n\n      return state;\n    });\n  };\n\n  itemToggle = (item: string) => {\n    const { selected } = this.state;\n\n    if (selected.includes(item)) {\n      this.removeItem(item);\n    } else {\n      this.addItem(item);\n    }\n  };\n\n  clearSelection = () => {\n    this.setState((state) => {\n      const { selected } = state;\n\n      selected.length = 0;\n\n      return state;\n    });\n  };\n\n  makeGoodsList = () => {\n    const { selected } = this.state;\n\n    return (\n      goodsFromServer.map((item) => {\n        return (\n          <li\n            key={item}\n            className={`list__item\n                  ${selected.includes(item) && 'list__item--selected'}\n            `}\n          >\n            {item}\n            <div className=\"list__buttons\">\n              <button\n                type=\"button\"\n                className=\"list__button\"\n                onClick={() => {\n                  this.itemToggle(item);\n                }}\n              >\n                {selected.includes(item)\n                  ? 'Remove'\n                  : 'Add'}\n              </button>\n            </div>\n          </li>\n        );\n      })\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>{this.headingText()}</h1>\n        <button\n          type=\"button\"\n          onClick={() => this.clearSelection()}\n        >\n          clear list\n        </button>\n        <ul className=\"list\">\n          {this.makeGoodsList()}\n        </ul>\n        {`Goods in list: ${goodsFromServer.length}`}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}